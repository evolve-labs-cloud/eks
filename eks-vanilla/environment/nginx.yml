---
# Namespace for the nginx application
apiVersion: v1
kind: Namespace
metadata:
  name: nginx-example
---
# ConfigMap for nginx configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: nginx-example
data:
  default.conf: |
    server {
        listen 80;
        server_name _;

        location /health {
            access_log off;
            return 200 "healthy\n";
        }

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
            try_files $uri $uri/ /index.html;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
  index.html: |
    <!DOCTYPE html>
    <html>
    <head>
    <title>Welcome to Nginx on Kubernetes with ALB!</title>
    <style>
        body {
            width: 35em;
            margin: 0 auto;
            font-family: Tahoma, Verdana, Arial, sans-serif;
        }
    </style>
    </head>
    <body>
    <h1>Welcome to Nginx on Kubernetes with ALB!</h1>
    <p>If you see this page, the Nginx web server is successfully installed and
    working through the AWS ALB Controller.</p>

    <p>For online documentation and support please refer to
    <a href="http://nginx.org/">nginx.org</a>.<br/>

    <p><em>Thank you for using Nginx and Kubernetes!</em></p>
    </body>
    </html>
---
# Deployment for Nginx
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: nginx-example
  labels:
    app: nginx
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      # Use Karpenter nodepool for scheduling
      nodeSelector:
        karpenter.sh/nodepool: soft
      containers:
      - name: nginx
        image: nginx:1.25.3-alpine
        ports:
        - containerPort: 80
          name: http
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
        - name: nginx-content
          mountPath: /usr/share/nginx/html/index.html
          subPath: index.html
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 2
          periodSeconds: 10
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
          items:
          - key: default.conf
            path: default.conf
      - name: nginx-content
        configMap:
          name: nginx-config
          items:
          - key: index.html
            path: index.html
---
# Service for Nginx
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  namespace: nginx-example
  labels:
    app: nginx
spec:
  selector:
    app: nginx
  ports:
  - name: http
    port: 80
    targetPort: 80
  type: ClusterIP
---
# Ingress for ALB
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx-ingress
  namespace: nginx-example
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/group.name: "shared-alb"
    alb.ingress.kubernetes.io/subnets: subnet-06119c39f0f8324a1,subnet-0f56748ff794c75d6,subnet-00f8d96b9524e5b27
    alb.ingress.kubernetes.io/healthcheck-path: /health
    alb.ingress.kubernetes.io/healthcheck-port: '80'
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
    alb.ingress.kubernetes.io/tags: Environment=prod,Project=evolvelabs
spec:
  rules:
  - http:
      paths:
      - path: /nginx
        pathType: Prefix
        backend:
          service:
            name: nginx-service
            port:
              number: 80